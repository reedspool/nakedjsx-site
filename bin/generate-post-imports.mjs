import { readdir, writeFile } from 'node:fs/promises';

console.log(`Running this script from CWD "${process.cwd()}"`)

const POST_DIR_REL_PATH = './posts'
const OUTPUT_FILE_REL_PATH = "./src/generated-post-imports.mjs"

const mdx = [];
let js = '';
let nextImportIndex = 0;


for (const inputFileName of await readdir(POST_DIR_REL_PATH)) {
  if (!inputFileName.endsWith('.mdx'))
    continue;

  const fileNameWithoutExtension = inputFileName.replace(/\.mdx$/, '');
  // TODO: The POST_DIR_REL_PATH should really be `..` but for some reason it's
  // the project root instead. So we add this extra `.` here because the generated
  // file goes in `src`, which makes the `posts` directory one level above.
  const postPath = `.${POST_DIR_REL_PATH}/${inputFileName}`;
  const outputFileName = `${fileNameWithoutExtension}.html`

  // Import the MDX file via the :mdx: plugin
  const identifier = `mdx_${nextImportIndex++}`
  js += `import ${identifier} from ':mdx:${postPath}';\n`;

  // Add the imported result to an array along with some meta information
  mdx.push(`[${JSON.stringify({ inputFileName, outputFileName }, null, 2)}, ${identifier}]`);
}


const result = `/*******************************************************************************
 * Warning! This file was automatically generated by running
 *
 *   \`npm run build:generate-post-imports\`
 *
 * Run that again to regenerate this file.
 ******************************************************************************/
${js}export default [${mdx.join(",")}];`;
console.log(`Writing to "${OUTPUT_FILE_REL_PATH}":\n\n`, result)

await writeFile(OUTPUT_FILE_REL_PATH, result)

console.log("\n\nDone")
